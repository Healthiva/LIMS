# -*- coding: utf-8 -*-

from odoo import models, fields, api

class Result(models.Model):
    _name = 'healthiva.result'

    active=fields.Boolean(default=True)
    sequence_number=fields.Integer(string="Sequence Number")
    value_type=fields.Char(string="Value Type")
    observation_identifier=fields.Char(string="Observation Identifier")
    observation_text=fields.Text(string="Observation Text")
    observation_date=fields.Datetime(string="Date/Time of Obeservation")
    coding_system_name1=fields.Char(string="Name of the Coding System 1")
    coding_system_name2=fields.Char(string="Name of the Coding System 2")
    alternate_identifier=fields.Char(string="Alternate Identifier")
    alternate_observation_text=fields.Text(string="Alternate Obeservation Text")
    alternate_observation_system=fields.Char(string="Name of Alternate Obeservation System")
    observation_subid=fields.Char(string="Observation Sub ID")
    observation_value=fields.Char(string="Observation Value")
    date_type=fields.Char(string="Type of Data")
    date_subtype=fields.Char(string="Data Sub Type")
    encoding=fields.Char(string="Encoding or Identifier")
    data_text=fields.Text(string="Data or Text")
    coding_system=fields.Char(string="Coding System")
    identifier=fields.Char(string="Identifier")
    result_text=fields.Text(string="Text")
    ref_ranges=fields.Char(string="Reference Ranges")
    abnormal_flags=fields.Char(string="Abnormal Flags")
    probability=fields.Char(string="Probability")
    abnormal_test_nature=fields.Char(string="Nature of Abnormal Test")
    result_status = fields.Selection(string="Observation Result Status", selection=[('preliminary', 'Preliminary Result'), ('cancelled', 'Procedure cannot be done'), ('corrected', 'Corrected Result'), ('complete', 'Result Complete'), ('incomplete', 'Incomplete')])
    ref_range_update_date=fields.Date(string="Date of last change in reference range or units")
    access_checks=fields.Char(string="User Defined Access Checks")
    producerid=fields.Char(string="Producer ID")
    observer=fields.Char(string="Responsible Observer")
    observation_method=fields.Char(string="Observation Method")
    equipment_identifier=fields.Char(string="Equipment Instance Identifier")
    analysis_date=fields.Datetime(string="Date/Time of the analysis")
    reserver_hamorizing1=fields.Char(string="Reserver for Hamorizing")
    reserver_hamorizing2=fields.Char(string="Reserver for Hamorizing")
    reserver_hamorizing3=fields.Char(string="Reserver for Hamorizing")
    performing_names=fields.Char(string="Performing Observation Names")
    performing_address=fields.Char(string="Performing Organization Address")
    performing_director=fields.Char(string="Performing Organization Director")
    release_category=fields.Char(string="Patient Results Release Category")
    route_cause=fields.Char(string="Route Cause")
    local_process_control=fields.Char(string="Local Process Control")
    patient_id = fields.Many2one("res.partner", string="Related Patient")
    comment=fields.Text(string="Notes")